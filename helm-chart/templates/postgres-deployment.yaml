apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Values.namespace }}
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      {{- if and (hasKey .Values "imageCredentials") (hasKey .Values.imageCredentials "dockerconfig") }}
      imagePullSecrets:
      - name: ghcr-secret
      {{- end }}
      containers:
      - name: postgres
        image: "{{ .Values.registry.postgres_url }}/docker.io/ankane/pgvector:latest"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "admin"
        - name: POSTGRES_PASSWORD
          value: "SuperSecurePassword"
        - name: POSTGRES_DB
          value: "postgres"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: PGSSLMODE
          value: "verify-ca"
        - name: PGSSLCERT
          value: "/etc/postgresql/ssl/postgres-certs/server.crt"
        - name: PGSSLKEY
          value: "/etc/postgresql/ssl/postgres-certs/server.key"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        - name: postgres-ssl-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: postgres-ssl-certs
          mountPath: /etc/postgresql/ssl/postgres-certs
          readOnly: true
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - admin
            - -d
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-script
        configMap:
          name: postgres-init-script
      - name: postgres-ssl-config
        configMap:
          name: postgres-ssl-config
      - name: postgres-ssl-certs
        secret:
          secretName: postgres-ssl-certs
          defaultMode: 0600
          items:
          - key: server.crt
            path: server.crt
          - key: server.key
            path: server.key