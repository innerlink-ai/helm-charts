apiVersion: v1
kind: Secret
metadata:
  name: ghcr-secret
  namespace: {{ .Values.namespace }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJnaGNyLmlvIjp7InVzZXJuYW1lIjoibWF0dGdvcmIiLCJwYXNzd29yZCI6ImdocF9TNExrZzcxOEZkZ0NlaGFhRmpuSkFJZEFwMlM3VmwzaTRnRUciLCJhdXRoIjoiYldGMGRHZHZjbUk2WjJod1gxTTBUR3RuTnpFNFJtUm5RMlZvWVdGR2FtNUtRVWxrUVhBeVV6ZFdiRE5wTkdkRlJ3PT0ifX19

#echo -n '{"auths":{"ghcr.io":{"username":"mattgorb","password":"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","auth":"'$(echo -n "mattgorb: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" | base64)'"}}}'| base64 -w 0

apiVersion: v1
kind: Secret
metadata:
  name: postgres-ssl-certs
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  # You'll need to base64 encode your certificate files and add them here
  # Example of how to generate these values:
  # cat /etc/postgresql/ssl/postgres-certs/server.crt | base64 -w 0
  # cat /etc/postgresql/ssl/postgres-certs/server.key | base64 -w 0
  server.crt: {{ .Files.Get "certs/server.crt" | b64enc | quote }}
  server.key: {{ .Files.Get "certs/server.key" | b64enc | quote }}
